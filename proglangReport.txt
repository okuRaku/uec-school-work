ジェニングズ・ジェシー  0695023
プログラミング言語論最終課題

楽しめるプログラミング言語：Ruby

Rubyとは、まつもとゆきひろ（Matz）により開発されたオブジェクト指向のスクリプト言語である。スクリプト言語とはいえ、とても強いプログラム言語である。Rubyとよく比較されるのはPerlとJavaである。Perlは優れたスクリプト言語であり、Javaも優れたオブジェクト指向言語であるが、Rubyは，Perlよりも美しい言語で、Javaよりも使いやすいオブジェクト指向言語なのである。

RubyにはPerlを手本とした強力な文字列操作や正規表現(Regex)による検索の機能を搭載し、Javaよりもシンプルにオブジェクト指向の概念を提供する。しかも、文法が簡単で、例外処理と自動的なメモリー管理機能を備え、プログラマが無駄に悩んだりすることが少ないように設計されています。学習や理解が容易な言語である。

Rubyはたいてい三つの環境で実装がある。一つ目はJavaと似たように、.rbソースファイルから同時にバイトコードにコンパイルしてインタープリタを通して実行される環境である。二つ目は公式パッケージにも含まれた、irb(Interactive Ruby Shell)というソフトを使用し、１行１行で、リアルタイムプログラミングする環境である。リアルタイムといっても、関数定義やif statementなども実行できる。三つ目はより有名な「Ruby on Rails」というWebアプリケーションフレームワークである。

Rubyの特徴のいくつかは既存のいろいろな言語の良い点からきたので、他の言語でもできることであるが、開発者のMatzの「プログラミングは楽しむべきである」という考えを目的として、より簡単に再び設計された。特に注目されるのは、ガベージコレクション、マルチスレッド、例外処理、イテレータ・クロージャ、Mixin、演算子オーバーロード、メタプログラミングなどである。Rubyでは継承はあるが、多段継承が複雑で分かりにくく、それに、制限になりやすいと言う理由で、一段しか継承できないようにわざと設計された。その代わり、Mixinという手段で他クラスのメソッドをモジュール的に使えることができる。

当然ながら、Rubyに対して批判もある。最も基本的なのは、インタープリタを使用するあらゆるプログラミング言語と同じく、C++やFortranなどのコンパイルした言語より速度が非常に遅い。しかし、動的型付けスクリプト言語としても、現在開発中より速いYARVというインタープリタを用いる1.9.1がリリースするまで、Rubyは競争的のPerlやPythonなどより比較的に遅い。

Rubyの世界では、あらゆるモノはオブジェクトである。特にJavaと違って、一般的にプリミティブで扱われるint, charなどもオブジェクトである。例として挙げると、ウィキペディアから、下記のソースコードがある。

コマンド						出力

# 文字リテラルを含め全てがオブジェクトである
-199.abs                                                 # 199
"ruby is cool".length                                    # 12
"Rick".index("c")                                        # 2
"Nice Day Isn't It?".downcase.split(//).uniq.sort.join  # " '?acdeinsty"

それに、Perlと同様に、タイプのパラダイムは動的型付けであって、データ構造の中でも、オブジェクトのタイプがストリングか整数かリストかどうかはに気にしなくても良い。

では、以上紹介したRubyという新鮮なスクリプト言語をもし気に入りそうであれば、ぜひ手に入れて動かしてみてください。Rubyの動作環境はWindows、Linux、各種UNIXなどに、ブラウザーの中でもある。

